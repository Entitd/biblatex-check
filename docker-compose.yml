version: '3.8'
services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      # - ./frontend/dist:/usr/share/nginx/html
      # - ./backend/uploads:/app/uploads
      # - ./nginx.conf:/etc/nginx/conf.d/default.conf

      # - ./backend/uploads:/app/uploads
      # - ./frontend/dist:/app/frontend_dist

      - ./frontend/dist:/usr/share/nginx/html  # Статика фронтенда
      - ./backend/uploads:/app/uploads  # Загрузки
      - ./nginx.conf:/etc/nginx/conf.d/default.conf  # Конфигурация
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    expose:
      - "8000"
    volumes:
      - ./backend/uploads:/app/uploads
    environment:
      - SECRET_KEY=123123123
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_NAME=biblatexcheck
      - DB_PASS=qwerty
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "uvicorn main:app --host 0.0.0.0 --port 8000"
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    expose:
      - "8000"
    environment:
      - NODE_ENV=production
    volumes:
      - ./frontend:/app
      - ./frontend/dist:/usr/share/nginx/html
    restart: unless-stopped

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=qwerty
      - POSTGRES_DB=biblatexcheck
    volumes:
      - pgdata:/var/lib/postgresql/data
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d biblatexcheck"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  pgdata: